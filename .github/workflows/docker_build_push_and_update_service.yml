name: Rails Nginx ECS Deploy

on:
  pull_request:
    types: [closed]
    branches: [main]

env:
  AWS_REGION: ap-northeast-1
  ECR_REPOSITORY_RAILS: shift-app-rails
  ECR_REPOSITORY_NGINX: shift-app-nginx
  ECS_SERVICE_NAME: shiftservice
  ECS_TASK_NAME: shifttask
  ECS_CLUSTER_NAME: shift-app-rails-nginx-cluster

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Setup RSA private key
        run: |
          mkdir -p backend/auth
          echo "${{ secrets.SERVICE_KEY_BASE64 }}" | base64 -d > backend/auth/service.key

        # AWSの認証情報を設定する。これはdockerのbuildとpushで使う。
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

        # AWSのIDを取得する。これはdockerのbuildとpushで使う。
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker images
        # dockerののbuildとpushする。steps.login-ecr.outputs.registryは上段部分でAWSのIDを取得しコマンドに入れ込みしている。
        run: |
          docker build --platform linux/amd64 -f production/Dockerfile -t ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY_RAILS }} ./backend --no-cache
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY_RAILS }}:latest
          docker build --platform linux/amd64 -f production/nginx/Dockerfile -t ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY_NGINX }} ./production/nginx --no-cache
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY_NGINX }}:latest

        # 現在のtask定義のJSONを取得する
      - name: Get Current Task Definition
        id: current-task-definition
        run: |
          aws ecs describe-task-definition --task-definition ${{ env.ECS_TASK_NAME }} --region ${{ env.AWS_REGION }} > current-task-definition.json
        env:
          ECS_TASK_NAME: shifttask

      - name: Fix task definition
        run: |
          jq '.taskDefinition' current-task-definition.json > fixed-task-definition.json

      - name: Print task definition content after updating NGINX image
        run: |
          cat fixed-task-definition.json

        # 下記でrailsとnginxのコンテナのイメージをtask定義のJSONに書き換えている。
      - name: Fill in the new image ID in the Amazon ECS task definition for Rails
        id: task-def-rails
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: fixed-task-definition.json
          container-name: rails
          image: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY_RAILS }}:latest

      - name: Fill in the new image ID in the Amazon ECS task definition for NGINX
        id: task-def-nginx
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ steps.task-def-rails.outputs.task-definition }}
          container-name: nginx
          image: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY_NGINX }}:latest

        # 新しく書き換えたtask定義のJSONファイルを下記でクラスターとサービス指定してデプロイする。
      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def-nginx.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE_NAME }}
          cluster: ${{ env.ECS_CLUSTER_NAME }}
          wait-for-service-stability: true
